diff --git a/arch/arm/dts/stm32mp157c-osd32mp1-brk.dts b/arch/arm/dts/stm32mp157c-osd32mp1-brk.dts
index 44978c7..5a70065 100644
--- a/arch/arm/dts/stm32mp157c-osd32mp1-brk.dts
+++ b/arch/arm/dts/stm32mp157c-osd32mp1-brk.dts
@@ -12,23 +12,20 @@
 #include <dt-bindings/pinctrl/stm32-pinfunc.h>
 #include <dt-bindings/clock/stm32mp1-clksrc.h>
 #include <dt-bindings/soc/st,stm32-etzpc.h>
-#include "osd32mp1_ddr.dtsi"
+#include <dt-bindings/power/stm32mp1-power.h>
 
+#include "osd32mp1_ddr.dtsi"
 #include "stm32mp157.dtsi"
 #include "stm32mp15xc.dtsi"
 #include "stm32mp15xxac-pinctrl.dtsi"
 #include "stm32mp15-ddr.dtsi"
 
-/* USER CODE BEGIN includes */
 #include <dt-bindings/power/stm32mp1-power.h>
-/* USER CODE END includes */
 
 / {
 	model = "Octavo OSD32MP1 BRK board";
 	compatible = "st,stm32mp157c-osd32mp1-brk", "st,stm32mp157";
 
-	/* USER CODE BEGIN root */
-
 	memory@c0000000{
 		device_type = "memory";
 		reg = <0xc0000000 0x20000000>;
@@ -49,29 +46,23 @@
 	chosen{
 		stdout-path = "serial0:115200n8";
 	};
-	/* USER CODE END root */
 
 	clocks {
 
-		/* USER CODE BEGIN clocks */
-		/* USER CODE END clocks */
-
 		clk_lse: clk-lse {
 			st,drive = < LSEDRV_MEDIUM_HIGH >;
-
-			/* USER CODE BEGIN clk_lse */
-			/* USER CODE END clk_lse */
 		};
 
 		clk_hse: clk-hse {
 			st,digbypass;
-
-			/* USER CODE BEGIN clk_hse */
-			/* USER CODE END clk_hse */
 		};
 	};
 
-}; /*root*/
+};
+
+&clk_hse {
+	st,digbypass;
+};
 
 &pinctrl {
 	rtc_pins_mx: rtc_mx-0 {
@@ -132,146 +123,126 @@
 };
 
 &rcc {
-	st,csi-cal;
 	st,hsi-cal;
+	st,csi-cal;
 	st,cal-sec = <60>;
 	st,clksrc = <
-		CLK_MPU_PLL1P
-		CLK_AXI_PLL2P
-		CLK_MCU_PLL3P
-		CLK_PLL12_HSE
-		CLK_PLL3_HSE
-		CLK_PLL4_HSE
-		CLK_RTC_LSE
-		CLK_MCO1_DISABLED
-		CLK_MCO2_DISABLED
+	CLK_MPU_PLL1P
+	CLK_AXI_PLL2P
+	CLK_MCU_PLL3P
+	CLK_PLL12_HSE
+	CLK_PLL3_HSE
+	CLK_PLL4_HSE
+	CLK_RTC_LSE
+	CLK_MCO1_DISABLED
+	CLK_MCO2_DISABLED
 	>;
+
 	st,clkdiv = <
-		1 		/*MPU*/
-		0 		/*AXI*/
-		0 		/*MCU*/
-		1 		/*APB1*/
-		1 		/*APB2*/
-		1 		/*APB3*/
-		1 		/*APB4*/
-		2 		/*APB5*/
-		23 		/*RTC*/
-		0 		/*MCO1*/
-		0 		/*MCO2*/
+	  1 /*MPU*/
+	  0 /*AXI*/
+	  0 /*MCU*/
+	  1 /*APB1*/
+	  1 /*APB2*/
+	  1 /*APB3*/
+	  1 /*APB4*/
+	  2 /*APB5*/
+	  23 /*RTC*/
+	  0 /*MCO1*/
+	  0 /*MCO2*/
 	>;
 	st,pkcs = <
-		CLK_CKPER_DISABLED
+		CLK_CKPER_HSE
+		CLK_FMC_ACLK
+		CLK_QSPI_ACLK
 		CLK_ETH_DISABLED
 		CLK_SDMMC12_PLL4P
+		CLK_DSI_DSIPLL
 		CLK_STGEN_HSE
 		CLK_USBPHY_HSE
-		CLK_SPI2S1_DISABLED
-		CLK_SPI2S23_DISABLED
-		CLK_SPI45_DISABLED
-		CLK_SPI6_DISABLED
+		CLK_SPI2S1_PLL3Q
+		CLK_SPI2S23_PLL3Q
+		CLK_SPI45_HSI
+		CLK_SPI6_HSI
 		CLK_I2C46_HSI
-		CLK_SDMMC3_DISABLED
+		CLK_SDMMC3_PLL4P
 		CLK_USBO_USBPHY
-		CLK_ADC_DISABLED
-		CLK_CEC_DISABLED
-		CLK_I2C12_DISABLED
-		CLK_I2C35_DISABLED
-		CLK_UART1_DISABLED
+		CLK_ADC_CKPER
+		CLK_CEC_LSE
+		CLK_I2C12_HSI
+		CLK_I2C35_HSI
+		CLK_UART1_HSI
 		CLK_UART24_HSI
-		CLK_UART35_DISABLED
-		CLK_UART6_DISABLED
-		CLK_UART78_DISABLED
-		CLK_SPDIF_DISABLED
-		CLK_SAI1_DISABLED
-		CLK_SAI2_DISABLED
-		CLK_SAI3_DISABLED
-		CLK_SAI4_DISABLED
+		CLK_UART35_HSI
+		CLK_UART6_HSI
+		CLK_UART78_HSI
+		CLK_SPDIF_PLL4P
+		CLK_FDCAN_PLL4R
+		CLK_SAI1_PLL3Q
+		CLK_SAI2_PLL3Q
+		CLK_SAI3_PLL3Q
+		CLK_SAI4_PLL3Q
 		CLK_RNG1_LSI
-		CLK_LPTIM1_DISABLED
-		CLK_LPTIM23_DISABLED
-		CLK_LPTIM45_DISABLED
+		CLK_RNG2_LSI
+		CLK_LPTIM1_PCLK1
+		CLK_LPTIM23_PCLK3
+	  	CLK_LPTIM45_LSE
 	>;
-	pll2:st,pll@1 {
-		compatible = "st,stm32mp1-pll";
-		reg = <1>;
-		cfg = < 2 65 1 0 0 PQR(1,1,1) >;
-		frac = < 0x1400 >;
-	};
-	pll3:st,pll@2 {
-		compatible = "st,stm32mp1-pll";
-		reg = <2>;
-		cfg = < 1 33 1 16 36 PQR(1,0,0) >;
-		frac = < 0x1a04 >;
+
+	/* VCO = 1066.0 MHz => P = 266 (AXI), Q = 533 (GPU), R = 533 (DDR) */
+	pll2: st,pll@1 {
+	  compatible = "st,stm32mp1-pll";
+	  reg = <1>;
+	  cfg = <2 65 1 0 0 PQR(1,1,1)>;
+	  frac = <0x1400>;
 	};
-	pll4:st,pll@3 {
-		compatible = "st,stm32mp1-pll";
-		reg = <3>;
-		cfg = < 3 98 5 7 7 PQR(1,0,0) >;
+	/* VCO = 417.8 MHz => P = 209, Q = 24, R = 11 */
+	pll3: st,pll@2 {
+	  compatible = "st,stm32mp1-pll";
+	  reg = <2>;
+	  cfg = <1 33 1 16 36 PQR(1,1,1)>;
+	  frac = <0x1a04>;
 	};
+	/* VCO = 594.0 MHz => P = 99, Q = 74, R = 74 */
+	pll4: st,pll@3 {
+	  compatible = "st,stm32mp1-pll";
+	  reg = <3>;
+	  cfg = <3 98 5 7 7 PQR(1,1,1)>;
+	  };
 };
 
 &bsec{
-	status = "okay";
-	secure-status = "okay";
-
-	/* USER CODE BEGIN bsec */
-
 	board_id:board_id@ec{
 		reg = <0xec 0x4>;
 		st,non-secure-otp;
 	};
-	/* USER CODE END bsec */
 };
 
 &cryp1{
 	status = "okay";
-
-	/* USER CODE BEGIN cryp1 */
-	/* USER CODE END cryp1 */
 };
 
 &etzpc{
 	st,decprot = <
-	/*"Non Secured" peripherals*/
-	DECPROT(STM32MP1_ETZPC_CRYP1_ID, DECPROT_NS_RW, DECPROT_UNLOCK)
-	DECPROT(STM32MP1_ETZPC_DMA1_ID, DECPROT_NS_RW, DECPROT_UNLOCK)
-	DECPROT(STM32MP1_ETZPC_DMA2_ID, DECPROT_NS_RW, DECPROT_UNLOCK)
-	DECPROT(STM32MP1_ETZPC_DMAMUX_ID, DECPROT_NS_RW, DECPROT_UNLOCK)
-	DECPROT(STM32MP1_ETZPC_HASH1_ID, DECPROT_NS_RW, DECPROT_UNLOCK)
-	DECPROT(STM32MP1_ETZPC_I2C4_ID, DECPROT_NS_RW, DECPROT_UNLOCK)
-	DECPROT(STM32MP1_ETZPC_RNG1_ID, DECPROT_NS_RW, DECPROT_UNLOCK)
-	DECPROT(STM32MP1_ETZPC_UART4_ID, DECPROT_NS_RW, DECPROT_UNLOCK)
-	DECPROT(STM32MP1_ETZPC_OTG_ID, DECPROT_NS_RW, DECPROT_UNLOCK)
-	DECPROT(STM32MP1_ETZPC_VREFBUF_ID, DECPROT_NS_RW, DECPROT_UNLOCK)
-	/*"Secured" peripherals*/
-	DECPROT(STM32MP1_ETZPC_DDRCTRL_ID, DECPROT_S_RW, DECPROT_UNLOCK)
-	DECPROT(STM32MP1_ETZPC_DDRPHYC_ID, DECPROT_S_RW, DECPROT_UNLOCK)
-	DECPROT(STM32MP1_ETZPC_STGENC_ID, DECPROT_S_RW, DECPROT_UNLOCK)
-
-	/*Restriction: following IDs are not managed  - please to use User-Section if needed:
-		STM32MP1_ETZPC_SRAMx_ID, STM32MP1_ETZPC_RETRAM_ID, STM32MP1_ETZPC_BKPSRAM_ID*/
-
-	/* USER CODE BEGIN etzpc_decprot */
-		/*STM32CubeMX generates a basic and standard configuration for ETZPC.
-		Additional device configurations can be added here if needed.
-		"etzpc" node could be also overloaded in "addons" User-Section.*/
-
-	DECPROT(STM32MP1_ETZPC_BKPSRAM_ID, DECPROT_S_RW, DECPROT_UNLOCK)
-
-	/* USER CODE END etzpc_decprot */
+  DECPROT(STM32MP1_ETZPC_USART1_ID, DECPROT_NS_RW, DECPROT_UNLOCK)
+  DECPROT(STM32MP1_ETZPC_SPI6_ID, DECPROT_NS_RW, DECPROT_UNLOCK)
+  DECPROT(STM32MP1_ETZPC_I2C4_ID, DECPROT_NS_RW, DECPROT_UNLOCK)
+  DECPROT(STM32MP1_ETZPC_I2C6_ID, DECPROT_NS_RW, DECPROT_UNLOCK)
+  DECPROT(STM32MP1_ETZPC_RNG1_ID, DECPROT_NS_RW, DECPROT_UNLOCK)
+  DECPROT(STM32MP1_ETZPC_HASH1_ID, DECPROT_NS_RW, DECPROT_UNLOCK)
+  DECPROT(STM32MP1_ETZPC_CRYP1_ID, DECPROT_NS_RW, DECPROT_UNLOCK)
+  DECPROT(STM32MP1_ETZPC_DDRCTRL_ID, DECPROT_S_RW, DECPROT_LOCK)
+  DECPROT(STM32MP1_ETZPC_DDRPHYC_ID, DECPROT_S_RW, DECPROT_LOCK)
+  DECPROT(STM32MP1_ETZPC_STGENC_ID, DECPROT_S_RW, DECPROT_LOCK)
+  DECPROT(STM32MP1_ETZPC_BKPSRAM_ID, DECPROT_S_RW, DECPROT_LOCK)
+  DECPROT(STM32MP1_ETZPC_IWDG1_ID, DECPROT_S_RW, DECPROT_LOCK)
 	>;
 
 	secure-status = "okay";
-
-	/* USER CODE BEGIN etzpc */
-	/* USER CODE END etzpc */
 };
 
 &hash1{
 	status = "okay";
-
-	/* USER CODE BEGIN hash1 */
-	/* USER CODE END hash1 */
 };
 
 &i2c4{
@@ -280,7 +251,6 @@
 	status = "okay";
 	secure-status = "okay";
 
-	/* USER CODE BEGIN i2c4 */
 	i2c-scl-rising-time-ns = <185>;
 	i2c-scl-falling-time-ns = <20>;
 	clock-frequency = <400000>;
@@ -292,6 +262,7 @@
 		interrupt-controller;
 		#interrupt-cells = <2>;
 		status = "okay";
+		secure-status = "okay";
 
 		regulators{
 			compatible = "st,stpmic1-regulators";
@@ -536,25 +507,17 @@
 	status = "okay";
 	secure-status = "okay";
 
-	/* USER CODE BEGIN iwdg2 */
 	timeout-sec = <32>;
-	/* USER CODE END iwdg2 */
 };
 
 &rcc{
 	status = "okay";
 	secure-status = "okay";
-
-	/* USER CODE BEGIN rcc */
-	/* USER CODE END rcc */
 };
 
 &rng1{
 	status = "okay";
 	secure-status = "okay";
-
-	/* USER CODE BEGIN rng1 */
-	/* USER CODE END rng1 */
 };
 
 &rtc{
@@ -562,76 +525,50 @@
 	pinctrl-0 = <&rtc_pins_mx>;
 	status = "okay";
 	secure-status = "okay";
-
-	/* USER CODE BEGIN rtc */
-	/* USER CODE END rtc */
 };
 
 &sdmmc1{
 	pinctrl-names = "default";
 	pinctrl-0 = <&sdmmc1_pins_mx>;
 	status = "okay";
-
-	/* USER CODE BEGIN sdmmc1 */
 	disable-wp;
 	st,neg-edge;
 	bus-width = <4>;
 	vmmc-supply = <&v3v3>;
-	/* USER CODE END sdmmc1 */
 };
 
 &tamp{
 	status = "okay";
 	secure-status = "okay";
-
-	/* USER CODE BEGIN tamp */
-	/* USER CODE END tamp */
 };
 
 &uart4{
 	pinctrl-names = "default";
 	pinctrl-0 = <&uart4_pins_mx>;
 	status = "okay";
-
-	/* USER CODE BEGIN uart4 */
-	/* USER CODE END uart4 */
 };
 
 &usbotg_hs{
 	status = "okay";
-
-	/* USER CODE BEGIN usbotg_hs */
 	phys = <&usbphyc_port1 0>;
 	phy-names = "usb2-phy";
 	usb-role-switch;
-	/* USER CODE END usbotg_hs */
 };
 
 &usbphyc{
 	status = "okay";
-
-	/* USER CODE BEGIN usbphyc */
-	/* USER CODE END usbphyc */
 };
 
 &usbphyc_port0{
 	status = "okay";
-
-	/* USER CODE BEGIN usbphyc_port0 */
 	phy-supply = <&vdd_usb>;
-	/* USER CODE END usbphyc_port0 */
 };
 
 &usbphyc_port1{
 	status = "okay";
-
-	/* USER CODE BEGIN usbphyc_port1 */
 	phy-supply = <&vdd_usb>;
-	/* USER CODE END usbphyc_port1 */
 };
 
-/* USER CODE BEGIN addons */
-
 &cpu0{
 	cpu-supply = <&vddcore>;
 };
@@ -661,6 +598,7 @@
 			<&hw2_otp>,
 			<&pkh_otp>,
 			<&board_id>;
+
 	nvmem-cell-names = "cfg0_otp",
 			"part_number_otp",
 			"monotonic_otp",
@@ -677,4 +615,3 @@
 	st,hsi-cal-input = <7>;
 	st,csi-cal-input = <8>;
 };
-/* USER CODE END addons */
